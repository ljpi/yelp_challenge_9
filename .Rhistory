temp = hmap$get(vec[i])
temp = temp+1
hmap$insert(vec[i],temp)
}
else{
hmap$insert(vec[i],1)
}
i=i+1
}
return(hmap)
}
i = 1
while(i <= length(restaurants_usethis$business_id)){
city=get_city(restaurants_usethis,i)
cat = restaurants_usethis$categories[i]
if(city=="Chandler"){
hmap_chandler=update_hashmap(hmap_chandler,cat)
}
else if(city=="Charlotte"){
hmap_charlotte=update_hashmap(hmap_charlotte,cat)
}
else if(city=="Cleveland"){
#hmap_cleveland=update_
}
else if(city=="Gilbert"){
}
else if(city=="Glendale"){
}
else if(city=="Henderson"){
}
else if(city=="Las Vegas"){
}
else if(city=="Madison"){
}
else if(city=="Mesa"){
}
else if(city=="Phoenix"){
}
else if(city=="Pittsburgh"){
}
else if(city=="Scottsdale"){
}
else if(city=="Tempe"){
}
else{
print(paste(c("ERROR at index: ",i)))
}
i=i+1
}
#takes string, delim by pipe |, counts occurances, updates hmap
update_hashmap = function(hmap,s){
vec=unlist(strsplit(s,split="\\|"))
len = length(vec)
i = 1
while(i<=len){
if(hmap$has_key(vec[i])){
temp = hmap$find(vec[i])
temp = temp+1
hmap$insert(vec[i],temp)
}
else{
hmap$insert(vec[i],1)
}
i=i+1
}
return(hmap)
}
i = 1
while(i <= length(restaurants_usethis$business_id)){
city=get_city(restaurants_usethis,i)
cat = restaurants_usethis$categories[i]
if(city=="Chandler"){
hmap_chandler=update_hashmap(hmap_chandler,cat)
}
else if(city=="Charlotte"){
hmap_charlotte=update_hashmap(hmap_charlotte,cat)
}
else if(city=="Cleveland"){
#hmap_cleveland=update_
}
else if(city=="Gilbert"){
}
else if(city=="Glendale"){
}
else if(city=="Henderson"){
}
else if(city=="Las Vegas"){
}
else if(city=="Madison"){
}
else if(city=="Mesa"){
}
else if(city=="Phoenix"){
}
else if(city=="Pittsburgh"){
}
else if(city=="Scottsdale"){
}
else if(city=="Tempe"){
}
else{
print(paste(c("ERROR at index: ",i)))
}
i=i+1
}
hmap_chandler
hmap_chandler$find("Chinese")
sqldf("select * from restaurants_usethis where city='Chandler' and business LIKE 'Lawyers'")
sqldf("select * from restaurants_usethis where city='Chandler' and categories LIKE 'Lawyers'")
sqldf("select * from restaurants_usethis where city='Chandler'")
update_hashmap = function(hmap,s){
vec=unlist(strsplit(s,split="\\|"))
len = length(vec)
i = 1
while(i<=len){
if(vec[i]=="Lawyers"){
print(vec)
}
if(hmap$has_key(vec[i])){
temp = hmap$find(vec[i])
temp = temp+1
hmap$insert(vec[i],temp)
}
else{
hmap$insert(vec[i],1)
}
i=i+1
}
return(hmap)
}
i = 1
while(i <= length(restaurants_usethis$business_id)){
city=get_city(restaurants_usethis,i)
cat = restaurants_usethis$categories[i]
if(city=="Chandler"){
hmap_chandler=update_hashmap(hmap_chandler,cat)
}
else if(city=="Charlotte"){
hmap_charlotte=update_hashmap(hmap_charlotte,cat)
}
else if(city=="Cleveland"){
#hmap_cleveland=update_
}
else if(city=="Gilbert"){
}
else if(city=="Glendale"){
}
else if(city=="Henderson"){
}
else if(city=="Las Vegas"){
}
else if(city=="Madison"){
}
else if(city=="Mesa"){
}
else if(city=="Phoenix"){
}
else if(city=="Pittsburgh"){
}
else if(city=="Scottsdale"){
}
else if(city=="Tempe"){
}
else{
print(paste(c("ERROR at index: ",i)))
}
i=i+1
}
sqldf("select * from restaurants_usethis where categories='Restaurants|Food|Bankruptcy Law|Financial Services|Estate Planning Law|Ice Cream & Frozen Yogurt|Professional Services|Tax Services|Business Consulting|Tax Law|Pizza|Lawyers'")
sqldf("select * from business where name='Law Office of James J Gentile'")
hmap_vec = c(hmap_chandler,hmap_charlotte,hmap_cleveland,hmap_gilbert,
hmap_glendale,hmap_henderson,hmap_lasvegas,hmap_madison,
hmap_mesa,hmap_phoenix,hmap_pittsburgh,hmap_pittsburgh,
hmap_scottsdale,hmap_tempe)
hmap_vec
#find all occurances of restaurant types in each location
cities_usethis = sqldf("select city from demographics")
restaurants_usethis = sqldf("select * from restaurants_open where (city='Chandler' or
city='Charlotte' or city='Cleveland' or city='Gilbert'
or city='Glendale' or city='Henderson' or city='Las Vegas'
or city='Madison' or city='Mesa' or city='Phoenix'
or city='Pittsburgh' or city='Scottsdale' or city='Tempe')")
get_city=function(df,i){
return(df$city[i])
}
create_hashmap = function(){
key="type"
value=0
temp = hashmap(key,value)
temp$erase(key)
return(temp)
}
hmap_chandler = create_hashmap()
hmap_charlotte = create_hashmap()
hmap_cleveland = create_hashmap()
hmap_gilbert = create_hashmap()
hmap_glendale = create_hashmap()
hmap_henderson = create_hashmap()
hmap_lasvegas = create_hashmap()
hmap_madison = create_hashmap()
hmap_mesa = create_hashmap()
hmap_phoenix = create_hashmap()
hmap_pittsburgh = create_hashmap()
hmap_scottsdale = create_hashmap()
hmap_tempe = create_hashmap()
#takes string, delim by pipe |, counts occurances, updates hmap
update_hashmap = function(hmap,s){
vec=unlist(strsplit(s,split="\\|"))
len = length(vec)
i = 1
while(i<=len){
if(hmap$has_key(vec[i])){
temp = hmap$find(vec[i])
temp = temp+1
hmap$insert(vec[i],temp)
}
else{
hmap$insert(vec[i],1)
}
i=i+1
}
return(hmap)
}
i = 1
while(i <= length(restaurants_usethis$business_id)){
city=get_city(restaurants_usethis,i)
cat = restaurants_usethis$categories[i]
if(city=="Chandler"){
hmap_chandler=update_hashmap(hmap_chandler,cat)
}
else if(city=="Charlotte"){
hmap_charlotte=update_hashmap(hmap_charlotte,cat)
}
else if(city=="Cleveland"){
hmap_cleveland=update_hashmap(hmap_cleveland,cat)
}
else if(city=="Gilbert"){
hmap_gilbert=update_hashmap(hmap_gilbert,cat)
}
else if(city=="Glendale"){
hmap_glendale=update_hashmap(hmap_glendale,cat)
}
else if(city=="Henderson"){
hmap_henderson=update_hashmap(hmap_henderson,cat)
}
else if(city=="Las Vegas"){
hmap_lasvegas=update_hashmap(hmap_lasvegas,cat)
}
else if(city=="Madison"){
hmap_madison=update_hashmap(hmap_madison,cat)
}
else if(city=="Mesa"){
hmap_mesa=update_hashmap(hmap_mesa,cat)
}
else if(city=="Phoenix"){
hmap_phoenix=update_hashmap(hmap_phoenix,cat)
}
else if(city=="Pittsburgh"){
hmap_pittsburgh=update_hashmap(hmap_pittsburgh,cat)
}
else if(city=="Scottsdale"){
hmap_scottsdale=update_hashmap(hmap_scottsdale,cat)
}
else if(city=="Tempe"){
hmap_tempe=update_hashmap(hmap_tempe,cat)
}
else{
print(paste(c("ERROR at index: ",i)))
}
i=i+1
}
hmap_vec = c(hmap_chandler,hmap_charlotte,hmap_cleveland,hmap_gilbert,
hmap_glendale,hmap_henderson,hmap_lasvegas,hmap_madison,
hmap_mesa,hmap_phoenix,hmap_pittsburgh,hmap_pittsburgh,
hmap_scottsdale,hmap_tempe)
hmap_vec
category_demographics_reg=function(hmap_vec,s){
values_vec = c(hmap_vec[1]$find(s),hmap_vec[2]$find(s),
hmap_vec[3]$find(s),hmap_vec[4]$find(s),
hmap_vec[5]$find(s),hmap_vec[6]$find(s),
hmap_vec[7]$find(s),hmap_vec[8]$find(s),
hmap_vec[9]$find(s),hmap_vec[10]$find(s),
hmap_vec[11]$find(s),hmap_vec[12]$find(s),
hmap_vec[13]$find(s),hmap_vec[14]$find(s))
return(lm(values_vec~demographics))
}
length(hmap_vec)
test = category_demographics_reg(hmap_vec,"Chinese")
category_demographics_reg=function(hmap_vec,s){
values_vec = c(hmap_vec[1]$find(s),hmap_vec[2]$find(s),
hmap_vec[3]$find(s),hmap_vec[4]$find(s),
hmap_vec[5]$find(s),hmap_vec[6]$find(s),
hmap_vec[7]$find(s),hmap_vec[8]$find(s),
hmap_vec[9]$find(s),hmap_vec[10]$find(s),
hmap_vec[11]$find(s),hmap_vec[12]$find(s),
hmap_vec[13]$find(s),hmap_vec[14]$find(s))
return(1)
}
test = category_demographics_reg(hmap_vec,"Chinese")
category_demographics_reg=function(hmap_vec,s){
values_vec = c(hmap_vec[1]$find(s),hmap_vec[2]$find(s),
hmap_vec[3]$find(s),hmap_vec[4]$find(s),
hmap_vec[5]$find(s),hmap_vec[6]$find(s),
hmap_vec[7]$find(s),hmap_vec[8]$find(s),
hmap_vec[9]$find(s),hmap_vec[10]$find(s),
hmap_vec[11]$find(s),hmap_vec[12]$find(s),
hmap_vec[13]$find(s),hmap_vec[14]$find(s))
return(lm(values_vec~demographics))
}
test = category_demographics_reg(hmap_vec,"Chinese")
category_demographics_reg=function(hmap_vec,s){
values_vec = c(hmap_vec[1]$find(s),hmap_vec[2]$find(s),
hmap_vec[3]$find(s),hmap_vec[4]$find(s),
hmap_vec[5]$find(s),hmap_vec[6]$find(s),
hmap_vec[7]$find(s),hmap_vec[8]$find(s),
hmap_vec[9]$find(s),hmap_vec[10]$find(s),
hmap_vec[11]$find(s),hmap_vec[12]$find(s),
hmap_vec[13]$find(s),hmap_vec[14]$find(s))
print(values_vec)
return(lm(values_vec~demographics))
}
test = category_demographics_reg(hmap_vec,"Chinese")
test = category_demographics_reg(hmap_vec,"Chinese")
hmap_vec[1]$find("Chinese")
hmap_vec[1]
tmp = hmap_vec[1]
tmp$fin
tmp$has_key("Chinese")
class(tmp)
tmp
unlist(tmp)
unlist(tmp)$find("Chinese")
tmp[[1]]
tmp[[1]]$find("Chinese")
category_demographics_reg=function(hmap_vec,s){
#values_vec = c(hmap_vec[1]$find(s),hmap_vec[2]$find(s),
#               hmap_vec[3]$find(s),hmap_vec[4]$find(s),
#               hmap_vec[5]$find(s),hmap_vec[6]$find(s),
#               hmap_vec[7]$find(s),hmap_vec[8]$find(s),
#               hmap_vec[9]$find(s),hmap_vec[10]$find(s),
#               hmap_vec[11]$find(s),hmap_vec[12]$find(s),
#               hmap_vec[13]$find(s),hmap_vec[14]$find(s))
values_vec=c()
for(i in 1:14){
values_vec = c(values_vec,hmap_vec[[i]]$find(s))
}
print(values_vec)
return(lm(values_vec~demographics))
}
test = category_demographics_reg(hmap_vec,"Chinese")
head(demographics)
class(demographics)
class(demographics$city)
class(demographics$state)
class(demographics$us)
class(demographics$pop_growth)
class(demographics$pop_by_race_2015)
category_demographics_reg=function(hmap_vec,s,demographics){
#values_vec = c(hmap_vec[1]$find(s),hmap_vec[2]$find(s),
#               hmap_vec[3]$find(s),hmap_vec[4]$find(s),
#               hmap_vec[5]$find(s),hmap_vec[6]$find(s),
#               hmap_vec[7]$find(s),hmap_vec[8]$find(s),
#               hmap_vec[9]$find(s),hmap_vec[10]$find(s),
#               hmap_vec[11]$find(s),hmap_vec[12]$find(s),
#               hmap_vec[13]$find(s),hmap_vec[14]$find(s))
values_vec=c()
for(i in 1:14){
values_vec = c(values_vec,hmap_vec[[i]]$find(s))
}
print(values_vec)
return(lm(values_vec~demographics))
}
test = category_demographics_reg(hmap_vec,"Chinese",demographics)
head(demographics)
category_demographics_reg=function(hmap_vec,s,demographics){
#values_vec = c(hmap_vec[1]$find(s),hmap_vec[2]$find(s),
#               hmap_vec[3]$find(s),hmap_vec[4]$find(s),
#               hmap_vec[5]$find(s),hmap_vec[6]$find(s),
#               hmap_vec[7]$find(s),hmap_vec[8]$find(s),
#               hmap_vec[9]$find(s),hmap_vec[10]$find(s),
#               hmap_vec[11]$find(s),hmap_vec[12]$find(s),
#               hmap_vec[13]$find(s),hmap_vec[14]$find(s))
values_vec=c()
for(i in 1:14){
values_vec = c(values_vec,hmap_vec[[i]]$find(s))
}
print(values_vec)
return(lm(values_vec~demographics$asian))
}
test = category_demographics_reg(hmap_vec,"Chinese",demographics)
length(demographics$asian)
demographics
hmap_vec = c(hmap_chandler,hmap_charlotte,hmap_cleveland,hmap_gilbert,
hmap_glendale,hmap_henderson,hmap_lasvegas,hmap_madison,
hmap_mesa,hmap_phoenix,hmap_pittsburgh,hmap_scottsdale,
hmap_tempe)
hmap_vec
category_demographics_reg=function(hmap_vec,s,demographics){
#values_vec = c(hmap_vec[1]$find(s),hmap_vec[2]$find(s),
#               hmap_vec[3]$find(s),hmap_vec[4]$find(s),
#               hmap_vec[5]$find(s),hmap_vec[6]$find(s),
#               hmap_vec[7]$find(s),hmap_vec[8]$find(s),
#               hmap_vec[9]$find(s),hmap_vec[10]$find(s),
#               hmap_vec[11]$find(s),hmap_vec[12]$find(s),
#               hmap_vec[13]$find(s),hmap_vec[14]$find(s))
values_vec=c()
for(i in 1:14){
values_vec = c(values_vec,hmap_vec[[i]]$find(s))
}
print(values_vec)
return(lm(values_vec~demographics$asian))
}
test = category_demographics_reg(hmap_vec,"Chinese",demographics)
category_demographics_reg=function(hmap_vec,s,demographics){
#values_vec = c(hmap_vec[1]$find(s),hmap_vec[2]$find(s),
#               hmap_vec[3]$find(s),hmap_vec[4]$find(s),
#               hmap_vec[5]$find(s),hmap_vec[6]$find(s),
#               hmap_vec[7]$find(s),hmap_vec[8]$find(s),
#               hmap_vec[9]$find(s),hmap_vec[10]$find(s),
#               hmap_vec[11]$find(s),hmap_vec[12]$find(s),
#               hmap_vec[13]$find(s),hmap_vec[14]$find(s))
values_vec=c()
for(i in 1:length(hmap_vec)){
values_vec = c(values_vec,hmap_vec[[i]]$find(s))
}
print(values_vec)
return(lm(values_vec~demographics$asian))
}
test = category_demographics_reg(hmap_vec,"Chinese",demographics)
summary(test)
category_demographics=function(hmap_vec,s,demographics){
#values_vec = c(hmap_vec[1]$find(s),hmap_vec[2]$find(s),
#               hmap_vec[3]$find(s),hmap_vec[4]$find(s),
#               hmap_vec[5]$find(s),hmap_vec[6]$find(s),
#               hmap_vec[7]$find(s),hmap_vec[8]$find(s),
#               hmap_vec[9]$find(s),hmap_vec[10]$find(s),
#               hmap_vec[11]$find(s),hmap_vec[12]$find(s),
#               hmap_vec[13]$find(s),hmap_vec[14]$find(s))
values_vec=c()
for(i in 1:length(hmap_vec)){
values_vec = c(values_vec,hmap_vec[[i]]$find(s))
}
return(values_vec)
}
test = category_demographics(hmap_vec,"Chinese",demographics)
test_reg = lm(test~demographics$asian)
summary(test_reg)
plot(test)
plot(test,demographics$asian)
lines(test_reg$fitted.values,demographics$asian)
plot(test,demographics$asian)
lines(test_reg$fitted.values,demographics$asian)
plot(demographics$asian,test)
lines(demographics$asian,test_reg$fitted.values)
asian_percent = demographics$asian/demographics$pop_by_race_2015
asian_percent
cities_usethis
restaurants_usethis
large_cities
city_restaurant_counts=sqldf("select city, count from large_cities join cities_usethis on state")
city_restaurant_counts=sqldf("select large_cities.city, count from large_cities join cities_usethis on state")
city_restaurant_counts
city_restaurant_counts=sqldf("select large_cities.city, count from large_cities join cities_usethis on large_cities.city")
city_restaurant_counts
cities_usethis
large_cities
city_restaurant_counts=sqldf("select large_cities.city, count from (large_cities join cities_usethis on large_cities.city)")
city_restaurant_counts
cities_usethis
large_cities
city_restaurant_counts=sqldf("select large_cities.city, count from (large_cities join cities_usethis on large_cities.city=cities_usethis.city)")
city_restaurant_counts
restaurant_chinese_percent=test/city_restaurant_counts$count
restaurant_chinese_percent
percent_reg_test = lm(restaurant_chinese_percent~asian_percent)
summary(percent_reg_test)
precent_reg_test2 = lm(asian_percent~restaurant_chinese_percent)
summary(percent_reg_test2)
precent_reg_test2 = lm(asian_percent~restaurant_chinese_percent)
percent_reg_test2 = lm(asian_percent~restaurant_chinese_percent)
summary(percent_reg_test2)
percent_reg_test2 = lm(restaurant_chinese_percent~asian_percent,demographics$age_index,demographics$income_index,demographics$pop_growth)
percent_reg_test2 = lm(restaurant_chinese_percent~asian_percent,demographics$age_index,demographics$income_index)
percent_reg_test2 = lm(restaurant_chinese_percent~asian_percent,demographics$age_index)
percent_reg_test2 = lm(restaurant_chinese_percent~asian_percent)
demographics$income_index
length(demographics$income_index)
percent_reg_test2 = lm(restaurant_chinese_percent~asian_percent,demographics$income_index)
length(restaurant_chinese_percent)
demographics$income_index
restaurant_chinese_percent
demographics$income_index
restaurant_chinese_percent
class(restaurant_chinese_percent)
class(demographics$income_index)
percent_reg_test2 = lm(restaurant_chinese_percent~asian_percent+demographics$income_index+demographics$pop_growth)
summary(percent_reg_test2)
review = load_json("yelp_academic_dataset_review.json")
pwd()
dir()
setwd("C:/cygwin64/home/Lester/yelp_challenge_9")
review = load_json("yelp_academic_dataset_review.json")
setwd("C:/cygwin64/home/Lester/yelp_challenge_9")
review = load_json("yelp_academic_dataset_review.json")
head(reviews)
head(review)
head(restaurants_usethis)
reviews_usethis=sqldf("select stars, date, text, categories, city from review join restaurants_usethis on review.business_id=restaurants_usethis.business_id")
reviews_usethis=sqldf("select review.stars, date, text, categories, city from review join restaurants_usethis on review.business_id=restaurants_usethis.business_id")
length(reviews_usethis$stars)
length(reviews$stars)
length(review$stars)
